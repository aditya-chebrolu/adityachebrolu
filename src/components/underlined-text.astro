---
import { underlinedTextSizeStyles } from "../styles/configs";

type Sizes = "xs" | "sm" | "md" | "lg" | "xl";
type Props = {
  text: string;
  size?: { mweb: Sizes; dweb: Sizes } | Sizes;
  color?: string | { dweb?: string; mweb?: string };
  lineColor?: string | { dweb?: string; mweb?: string };
  customStyles?: any;
  type: "h1" | "h2" | "h3" | "h4";
};
const {
  text,
  type: Tag,
  lineColor: lineColorProp,
  color: colorProp,
  size = "lg",
} = Astro.props;

const lineColor = lineColorProp || "#ef9b0f";
const color = colorProp ?? "#2a3439";
const [mwebFontSize, mwebLineThickness, mwebLineOffset] =
  underlinedTextSizeStyles["mweb"][typeof size === "object" ? size.mweb : size];
const [dwebFontSize, dwebLineThickness, dwebLineOffset] =
  underlinedTextSizeStyles["dweb"][typeof size === "object" ? size.dweb : size];
---

<style>
  .heading {
    margin: unset;
    padding: unset;
    text-decoration: underline;
    text-decoration-skip-ink: none;
    /* color */
    color: var(--color);
    text-decoration-color: var(--lineColor);

    /* sizes */
    font-weight: bold;
    font-size: var(--mwebFontSize);
    line-height: var(--mwebFontSize);
    text-underline-offset: var(--mwebLineOffset);
    text-decoration-thickness: var(--mwebLineThickness);
  }

  @media (min-width: 900px) {
    .heading {
      font-size: var(--dwebFontSize);
      line-height: var(--dwebFontSize);
      text-underline-offset: var(--dwebLineOffset);
      text-decoration-thickness: var(--dwebLineThickness);
      color: var(--color);
      text-decoration-color: var(--lineColor);
    }
  }
</style>

<Tag
  class="heading"
  style={`--color: ${color}; --lineColor: ${lineColor}; --mwebFontSize: ${mwebFontSize}; --mwebLineThickness: ${mwebLineThickness}; --mwebLineOffset: ${mwebLineOffset}; --dwebFontSize: ${dwebFontSize}; --dwebLineThickness: ${dwebLineThickness}; --dwebLineOffset: ${dwebLineOffset};`}
>
  {text}
</Tag>

<!-- <div>
  <Tag class:list={["heading"]}>{text}</Tag>
</div> -->
